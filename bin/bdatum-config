#!/bin/bash

# bdatum-config
# Copyright (c) 2013 Thiago Rondon, http://www.b-datum.com/
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

APP="b-datum backup config tool"
TMPFILE=/etc/bdatum/backup.conf.tmp
ETC=/etc/bdatum/backup.conf
ETCBKP=/etc/bdatum/backup.conf.bkp
REMOTE_CONFIG=0

if [ "$(id -u)" != "0" ]; then
   #echo "This script just can be run as root" 1>&2
   #exit 1
  TMPFILE=$HOME/.b-datum/backup.conf.tmp
  ETC=$HOME/.b-datum/backup.conf
  ETCBKP=$HOME/.b-datum/backup.conf.bkp
fi

mkdir -p `dirname $ETC`

function _get_nodekey(){
	read -p "Enter your node key :" NODEKEY
}

function _get_partnerkey() {
	read -p "Enter your partner key :" PARTNERKEY
}

function _get_remote_config() {
	read -p "Do you get the config from dashboard (remote) ? (y/n):" choice
	case "$choice" in
		y|Y ) REMOTE_CONFIG=1 ;;
		n|N ) REMOTE_CONFIG=0 ;;
		*) _get_remote_config ;;
	esac
}

function _get_pathdir() {
	read -p "Enter backup directory :" TMPPATHDIR
	
	if [ ! -d $TMPPATHDIR ] ; then
		echo "Warning: $TMPPATHDIR is not a directory."
	fi
	
	if [ "$PATHDIR" ] ; then
		PATHDIR="$TMPPATHDIR;$PATHDIR"
	else 
		PATHDIR=$TMPPATHDIR
	fi

	read -p "Do you want to add another directory ? (y/n):" choice
	case "$choice" in
		y|Y ) _get_pathdir ;;
	esac

}

function _write_default_config() {
	TARGET_FILE=$1
        FILECONTENT="
remote_config=$REMOTE_CONFIG
node_key=$NODEKEY
partner_key=$PARTNERKEY
path=$PATHDIR

# You can also use profiles.
# Values setted here take precedence over default values.
# [profile1]
# node_key=another_key
# partner_key=another_key
# path=another_path
"
	echo "$FILECONTENT" > $TARGET_FILE
	chmod 0400 $TARGET_FILE
}

function _save_tmpfile() {
	_write_default_config "$TMPFILE"
	if [ -f $ETC ] ; then
		echo "Move $ETC to $ETCBKP..."
		mv -f $ETC $ETCBKP
	fi
	echo "Save the new config in $ETC..."
	mv -f $TMPFILE $ETC
}

function _ask_to_continue() {
	msg=$1

	echo "*** $msg"
	read -p "Continue (y/n)?" choice

	case "$choice" in 
		y|Y) echo "Ok." ;;
		
		n|N) if [ ! -f $ETC ] ; then 
			_write_default_config "$ETC" 
		     fi ; exit 
		;;
		
		* ) echo "Invalid option" ;;
	esac
}

while [ 1 ] ; do
	_get_nodekey
	if [ ${#NODEKEY} == 20 ] ; then
		break
	fi
	_ask_to_continue "Node key must be 20 characters"
done

while [ 1 ] ; do
	_get_partnerkey
	if [ ${#PARTNERKEY} == 20 ] ; then
		break
	fi
	_ask_to_continue "Partner key must be 20 characters"
done

_get_remote_config

if [ "$REMOTE_CONFIG" -eq "0" ] ; then
	_get_pathdir
fi

_save_tmpfile


#! /bin/sh

# chkconfig: 2345 55 25
# description: b-datum

# Place this file at /etc/init.d/b-datum (or
# /etc/rc.d/init.d/b-datum) and make symlinks to
#   /etc/rc.d/rc0.d/K02b-datum
#   /etc/rc.d/rc1.d/K02b-datum
#   /etc/rc.d/rc2.d/K02b-datum
#   /etc/rc.d/rc3.d/S98b-datum
#   /etc/rc.d/rc4.d/S98b-datum
#   /etc/rc.d/rc5.d/S98b-datum
# Or, if you have chkconfig, simply:
# chkconfig --add b-datum
#
# Proper init scripts on Linux systems normally require setting lock
# and pid files under /var/run as well as reacting to network
# settings, so you should treat this with care.

# The path that is to be used for the script
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

EXEC=bdatum-backup
DAEMON="/usr/bin/$EXEC"
PIDFILE=/var/run/$EXEC.pid
DAEMONOPTS="-d"

# Only start if we can find the postmaster.
test -x $DAEMON ||
{
	echo "$DAEMON not found"
	if [ "$1" = "stop" ]
	then exit 0
	else exit 5
	fi
}

start() {
	echo -n "Starting $EXEC... "
	#PID=`$DAEMON $DAEMONOPTS > /dev/null 2>&1 & echo $!`
	$DAEMON $DAEMONOPTS
	PID=`cat $PIDFILE`
	if [ -z $PID ]; then
		echo "FAIL"
	else 
		echo $PID > $PIDFILE
		echo "OK"
	fi
}

stop() {
  	echo -n "Stopping $EXEC: "
	PID=`cat $PIDFILE`
	if [ -f $PIDFILE ]; then
		kill -HUP $PID
		echo "OK"
		rm -f $PIDFILE
	else
		echo "FAIL -- pidfile not found"
	fi
}

status() {
	echo -n "Checking $EXEC..."
	if [ -f $PIDFILE ]; then
		PID=`cat $PIDFILE`
		if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
			echo "Process dead but pidfile exists"
		else
			echo "Running"
		fi
	else
		echo "Service not running"
	fi
}


# Parse command line parameters.
case $1 in
	status)
		status
		;;
	start)
		start
		;;
	stop)
		stop
		;;
	restart)
		stop
		start
		;;
	*)
		echo "Usage: $0 {status|start|stop|restart}" 1>&2
		exit 1
		;;
esac

exit 0

